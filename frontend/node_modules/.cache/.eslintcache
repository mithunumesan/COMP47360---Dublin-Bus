[{"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\index.js":"1","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\App.js":"2","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Leapcardlogin.js":"3","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Leapcard.js":"4","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Weather.js":"5","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Journeyplanning.js":"6","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\layout\\MainNavigation.js":"7","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\layout\\WeatherCard.js":"8","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\markers.js":"9"},{"size":485,"mtime":1657553526021,"results":"10","hashOfConfig":"11"},{"size":906,"mtime":1657635024777,"results":"12","hashOfConfig":"11"},{"size":720,"mtime":1657553526022,"results":"13","hashOfConfig":"11"},{"size":6312,"mtime":1657553526022,"results":"14","hashOfConfig":"11"},{"size":612,"mtime":1657561748609,"results":"15","hashOfConfig":"11"},{"size":4716,"mtime":1657757424469,"results":"16","hashOfConfig":"11"},{"size":1631,"mtime":1657633521174,"results":"17","hashOfConfig":"11"},{"size":632,"mtime":1657635067321,"results":"18","hashOfConfig":"11"},{"size":123,"mtime":1657757002634,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1llcq3t",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\index.js",[],[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\App.js",[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Leapcardlogin.js",[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Leapcard.js",[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Weather.js",[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\pages\\Journeyplanning.js",["51","52","53"],["54","55"],"import WeatherCard from '../components/layout/WeatherCard';\r\n\r\nimport { useJsApiLoader, Autocomplete,DirectionsRenderer,GoogleMap,Marker } from '@react-google-maps/api';\r\nimport { useState,useRef,useEffect } from 'react';\r\nimport { getmarkers} from '../components/markers';\r\n\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%'\r\n  };\r\n  \r\n\r\nconst center = {\r\n    lat: 53.3463,\r\n    lng: -6.2631\r\n  };\r\n    \r\n\r\nfunction JourneyPlanning() {\r\n    \r\n    \r\n    const [markers,setmarkers]=useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getmarkers()\r\n          .then(markers => {\r\n            if(mounted) {\r\n              setmarkers(markers)\r\n            }\r\n          })\r\n        return () => mounted = false;\r\n      }, [])\r\n\r\n    const [directionsResponse, setDirectionsResponse] = useState(null)\r\n   \r\n    /**@type React.MutableRefObject<HTMLInputElement> */\r\n    const startRef = useRef()\r\n    /**@type React.MutableRefObject<HTMLInputElement> */\r\n    const destinationRef = useRef()\r\n    const [map, setMap] = useState(/** @type google.maps.Map */ (null))\r\n    const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: \"AIzaSyCdf-x6SluXsWzP9qpwxVGBY08pm_3TAQU\",\r\n    libraries:['places']\r\n  })\r\n      if(!isLoaded) {\r\n        return \"map is not loaded\";\r\n    }\r\n\r\n    async function caculateRoute(){\r\n        if(startRef.current.value === '' || destinationRef.current.value === '') {\r\n            return;\r\n        }\r\n        // eslint-disable-next-line\r\n        const directionsService = new google.maps.DirectionsService()\r\n        // eslint-disable-next-line\r\n        const results = await directionsService.route({\r\n            origin: startRef.current.value,\r\n            destination: destinationRef.current.value,\r\n            // eslint-disable-next-line\r\n            travelMode: google.maps.TravelMode.TRANSIT\r\n        })\r\n        setDirectionsResponse(results)\r\n        console.log(results)\r\n    }\r\n\r\n   function clearRoute() {\r\n    if(startRef.current.value === '' || destinationRef.current.value === '') {\r\n        setDirectionsResponse(null);\r\n    }\r\n   }\r\n\r\n    return  (\r\n    <><div className='weather-card'><WeatherCard /></div>\r\n    <div className=\"flex-container\">\r\n        <div className=\"box1\">\r\n            <h1>Journey Planner</h1>\r\n            <div className=\"journey-form\">\r\n                <Autocomplete>\r\n                <input type=\"search\" placeholder=\"Start Point\" className=\"box\" ref={startRef}></input>\r\n                </Autocomplete>\r\n                <Autocomplete>\r\n                <input type=\"search\" placeholder=\"Destination\" className=\"box\" ref={destinationRef}></input>\r\n                </Autocomplete>\r\n                <label for=\"time\">Choose a time to start the journey: </label>\r\n                <select id=\"option\" onChange={() => {\r\n                    var option = document.getElementById(\"option\").value;\r\n                    if (option !== \"now\") {\r\n                        \r\n                        document.getElementById(\"time\").innerHTML = '<input type=\"date\" name=\"\" class=\"date\">' + '<input type=\"time\" name=\"\" class=\"time\">';\r\n                    } else {\r\n                        document.getElementById(\"time\").innerHTML = \"\";\r\n                    }\r\n                } }>\r\n                    <option value=\"now\">Leave Now</option>\r\n                    <option value=\"depart\">Depart At</option>\r\n                    <option value=\"arrive\">Arrive By</option>\r\n                    <option value=\"lastAvaliable\">Last Avaliable</option>\r\n                </select>\r\n\r\n                <div id=\"time\"></div>\r\n                <button type=\"submit\"  className=\"btn\" onClick={caculateRoute}>Search</button>\r\n            </div>\r\n            <div id=\"result\"></div>\r\n        </div>\r\n        <div className=\"box2\">\r\n            <div id=\"map\">\r\n            \r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={13}\r\n                    onLoad={map => setMap(map)}\r\n                    >\r\n                    { /* Child components, such as markers, info windows, etc. */ }\r\n                   \r\n                    {\r\n                    markers.map((marker, index) => (\r\n                     <Marker\r\n                    key={index}\r\n                    name={marker.name}\r\n                    position={{ lat:marker.latitude, lng:marker.longitude  }}\r\n                     />\r\n                     ))}\r\n                    {directionsResponse && (<DirectionsRenderer directions={directionsResponse} />)}\r\n                 </GoogleMap>\r\n            </div>\r\n        </div>\r\n        \r\n    </div></>);}\r\nexport default JourneyPlanning;","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\layout\\MainNavigation.js",[],[],"C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\layout\\WeatherCard.js",["56"],[],"import ReactWeather, { useOpenWeather } from 'react-open-weather';\r\n\r\n\r\nconst WeatherCard = () => {\r\n  const { data,isLoading, errorMessage } = useOpenWeather({\r\n    key: 'f775d12211646f76b3f266a5076c78a9',\r\n    lat: '53.344',\r\n    lon: '-6.2672',\r\n    lang: 'en',\r\n    unit: 'metric', // values are (metric, standard, imperial)\r\n  })\r\n  \r\n{return (\r\n    <ReactWeather\r\n      isLoading={isLoading}\r\n      errorMessage={errorMessage}\r\n      data={data}\r\n      lang=\"en\"\r\n      locationLabel=\"Dublin\"\r\n      unitsLabels={{ temperature: 'C', windSpeed: 'Km/h' }}\r\n      showForecast={false}\r\n    />);\r\n}\r\n}\r\nexport default WeatherCard;","C:\\Users\\michael\\Documents\\GitHub\\COMP47360---Dublin-Bus\\frontend\\src\\components\\markers.js",[],[],[],{"ruleId":"57","severity":1,"message":"58","line":44,"column":12,"nodeType":"59","messageId":"60","endLine":44,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":70,"column":13,"nodeType":"59","messageId":"60","endLine":70,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":93,"column":112,"nodeType":"64","messageId":"65","endLine":93,"endColumn":113},{"ruleId":"66","severity":2,"message":"67","line":58,"column":39,"nodeType":"59","messageId":"68","endLine":58,"endColumn":45,"suppressions":"69"},{"ruleId":"66","severity":2,"message":"67","line":64,"column":25,"nodeType":"59","messageId":"68","endLine":64,"endColumn":31,"suppressions":"70"},{"ruleId":"71","severity":1,"message":"72","line":13,"column":1,"nodeType":"73","messageId":"74","endLine":23,"endColumn":2},"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'clearRoute' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-undef","'google' is not defined.","undef",["75"],["76"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"kind":"77","justification":"78"},{"kind":"77","justification":"78"},"directive",""]