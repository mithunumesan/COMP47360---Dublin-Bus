[{"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/index.js":"1","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/App.js":"2","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcard.js":"3","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcardlogin.js":"4","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Weather.js":"5","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Journeyplanning.js":"6","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/MainNavigation.js":"7","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Map.js":"8","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/WeatherCard.js":"9"},{"size":470,"mtime":1657485362604,"results":"10","hashOfConfig":"11"},{"size":877,"mtime":1657485362603,"results":"12","hashOfConfig":"11"},{"size":6241,"mtime":1657485362604,"results":"13","hashOfConfig":"11"},{"size":705,"mtime":1657485362604,"results":"14","hashOfConfig":"11"},{"size":589,"mtime":1657536658069,"results":"15","hashOfConfig":"11"},{"size":3918,"mtime":1657536658068,"results":"16","hashOfConfig":"11"},{"size":1592,"mtime":1657536658068,"results":"17","hashOfConfig":"11"},{"size":719,"mtime":1657491727151,"results":"18","hashOfConfig":"11"},{"size":608,"mtime":1657536658068,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ia6eq",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/index.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/App.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcard.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcardlogin.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Weather.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Journeyplanning.js",["49","50","51","52"],["53","54"],"import WeatherCard from '../components/layout/WeatherCard';\n\nimport { useJsApiLoader, Autocomplete,DirectionsRenderer,GoogleMap,Marker } from '@react-google-maps/api';\nimport { useState,useRef } from 'react';\n\n\n\nconst containerStyle = {\n    width: '100%',\n    height: '100%'\n  };\n  \n  const center = {\n    lat: 53.3463,\n    lng: -6.2631\n  };\n    \nfunction JourneyPlanning() {\n    const [directionsResponse, setDirectionsResponse] = useState(null)\n   \n    /**@type React.MutableRefObject<HTMLInputElement> */\n    const startRef = useRef()\n    /**@type React.MutableRefObject<HTMLInputElement> */\n    const destinationRef = useRef()\n    const [map, setMap] = useState(/** @type google.maps.Map */ (null))\n    const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyCdf-x6SluXsWzP9qpwxVGBY08pm_3TAQU\",\n    libraries:['places']\n  })\n      if(!isLoaded) {\n        return \"map is not loaded\";\n    }\n\n    async function caculateRoute(){\n        if(startRef.current.value === '' || destinationRef.current.value === '') {\n            return;\n        }\n        // eslint-disable-next-line\n        const directionsService = new google.maps.DirectionsService()\n        // eslint-disable-next-line\n        const results = await directionsService.route({\n            origin: startRef.current.value,\n            destination: destinationRef.current.value,\n            // eslint-disable-next-line\n            travelMode: google.maps.TravelMode.TRANSIT\n        })\n        setDirectionsResponse(results)\n        console.log(results)\n    }\n\n   function clearRoute() {\n    if(startRef.current.value === '' || destinationRef.current.value === '') {\n        setDirectionsResponse(null);\n    }\n   }\n\n    return  (<><div className='weather-card'><WeatherCard /></div>\n    <div className=\"flex-container\">\n        <div className=\"box1\">\n            <h1>Journey Planner</h1>\n            <div className=\"journey-form\">\n                <Autocomplete>\n                <input type=\"search\" placeholder=\"Start Point\" className=\"box\" ref={startRef}></input>\n                </Autocomplete>\n                <Autocomplete>\n                <input type=\"search\" placeholder=\"Destination\" className=\"box\" ref={destinationRef}></input>\n                </Autocomplete>\n                <label for=\"time\">Choose a time to start the journey: </label>\n                <select id=\"option\" onChange={() => {\n                    var option = document.getElementById(\"option\").value;\n                    if (option !== \"now\") {\n                        document.getElementById(\"time\").innerHTML = '<input type=\"date\" name=\"\" class=\"date\">' + '<input type=\"time\" name=\"\" class=\"time\">';\n                    } else {\n                        document.getElementById(\"time\").innerHTML = \"\";\n                    }\n                } }>\n                    <option value=\"now\">Leave Now</option>\n                    <option value=\"depart\">Depart At</option>\n                    <option value=\"arrive\">Arrive By</option>\n                    <option value=\"lastAvaliable\">Last Avaliable</option>\n                </select>\n\n                <div id=\"time\"></div>\n                <button type=\"submit\"  className=\"btn\" onClick={caculateRoute}>Search</button>\n            </div>\n            <div id=\"result\"></div>\n        </div>\n        <div className=\"box2\">\n            <div id=\"map\">\n                <GoogleMap\n                    mapContainerStyle={containerStyle}\n                    center={center}\n                    zoom={13}\n                    onLoad={map => setMap(map)}\n                    >\n                    { /* Child components, such as markers, info windows, etc. */ }\n                    {/* <Marker position={center} /> */}\n                    {directionsResponse && (<DirectionsRenderer directions={directionsResponse} />)}\n                 </GoogleMap>\n            </div>\n        </div>\n        \n    </div></>);}\nexport default JourneyPlanning;","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/MainNavigation.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Map.js",["55"],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/WeatherCard.js",["56"],[],"import ReactWeather, { useOpenWeather } from 'react-open-weather';\n\n\nconst WeatherCard = () => {\n  const { data,isLoading, errorMessage } = useOpenWeather({\n    key: 'f775d12211646f76b3f266a5076c78a9',\n    lat: '53.344',\n    lon: '-6.2672',\n    lang: 'en',\n    unit: 'metric', // values are (metric, standard, imperial)\n  })\n  \n{return (\n    <ReactWeather\n      isLoading={isLoading}\n      errorMessage={errorMessage}\n      data={data}\n      lang=\"en\"\n      locationLabel=\"Dublin\"\n      unitsLabels={{ temperature: 'C', windSpeed: 'Km/h' }}\n      showForecast={false}\n    />);\n}\n}\nexport default WeatherCard;",{"ruleId":"57","severity":1,"message":"58","line":3,"column":68,"nodeType":"59","messageId":"60","endLine":3,"endColumn":74},{"ruleId":"57","severity":1,"message":"61","line":25,"column":12,"nodeType":"59","messageId":"60","endLine":25,"endColumn":15},{"ruleId":"57","severity":1,"message":"62","line":51,"column":13,"nodeType":"59","messageId":"60","endLine":51,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":72,"column":112,"nodeType":"65","messageId":"66","endLine":72,"endColumn":113},{"ruleId":"67","severity":2,"message":"68","line":39,"column":39,"nodeType":"59","messageId":"69","endLine":39,"endColumn":45,"suppressions":"70"},{"ruleId":"67","severity":2,"message":"68","line":45,"column":25,"nodeType":"59","messageId":"69","endLine":45,"endColumn":31,"suppressions":"71"},{"ruleId":"57","severity":1,"message":"72","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":13,"column":1,"nodeType":"75","messageId":"76","endLine":23,"endColumn":2},"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","'map' is assigned a value but never used.","'clearRoute' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-undef","'google' is not defined.","undef",["77"],["78"],"'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"kind":"79","justification":"80"},{"kind":"79","justification":"80"},"directive",""]