[{"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/index.js":"1","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/App.js":"2","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcard.js":"3","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcardlogin.js":"4","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Journeyplanning.js":"5","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/MainNavigation.js":"6","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/WeatherCard.js":"7","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/LoginForm.js":"8"},{"size":470,"mtime":1657485362604,"results":"9","hashOfConfig":"10"},{"size":914,"mtime":1657657538292,"results":"11","hashOfConfig":"10"},{"size":6241,"mtime":1657485362604,"results":"12","hashOfConfig":"10"},{"size":705,"mtime":1657485362604,"results":"13","hashOfConfig":"10"},{"size":6851,"mtime":1657725141125,"results":"14","hashOfConfig":"10"},{"size":1797,"mtime":1657705555602,"results":"15","hashOfConfig":"10"},{"size":1012,"mtime":1657705531336,"results":"16","hashOfConfig":"10"},{"size":661,"mtime":1657657538292,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"17ia6eq",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/index.js",[],[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/App.js",[],[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcard.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Leapcardlogin.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/pages/Journeyplanning.js",["46","47"],["48","49","50","51","52"],"import { useJsApiLoader, Autocomplete,DirectionsRenderer,GoogleMap,Marker } from '@react-google-maps/api';\nimport { useState,useRef } from 'react';\n\nconst containerStyle = {\n    width: '100%',\n    height: '100%'\n  };\n  \n  const center = {\n    lat: 53.3463,\n    lng: -6.2631\n  };\n\n  const defaultBounds = {\n    north: center.lat + 0.1,\n    south: center.lat - 0.1,\n    east: center.lng + 0.1,\n    west: center.lng - 0.1,\n  };\n\n\nfunction JourneyPlanning() {\n\n    //react google map api using is refereneced from https://www.youtube.com/watch?v=iP3DnhCUIsE&list=RDCMUCr0y1P0-zH2o3cFJyBSfAKg&start_radio=1&rv=iP3DnhCUIsE&t=1614\n    const [directionsResponse, setDirectionsResponse] = useState({})\n    //save markers\n    const [markers,setMarkers]=useState({});\n   \n    /**@type React.MutableRefObject<HTMLInputElement> */\n    const startRef = useRef()\n    /**@type React.MutableRefObject<HTMLInputElement> */\n    const destinationRef = useRef()\n    const [map, setMap] = useState(/** @type google.maps.Map */ (null))\n    const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyCdf-x6SluXsWzP9qpwxVGBY08pm_3TAQU\",\n    libraries:['places']\n  })\n      if(!isLoaded) {\n        return \"map is not loaded\";\n    }\n\n    async function caculateRoute(){\n        if(startRef.current.value === '' || destinationRef.current.value === '') {\n            return;\n        }\n        // eslint-disable-next-line\n        const directionsService = new google.maps.DirectionsService()\n        // eslint-disable-next-line\n        const results = await directionsService.route({\n            origin: startRef.current.value,\n            destination: destinationRef.current.value,\n            // eslint-disable-next-line\n            travelMode: google.maps.TravelMode.TRANSIT,\n            provideRouteAlternatives: true,\n        })\n        setDirectionsResponse(results);\n    }\n\n    async function clearRoute() {\n            // eslint-disable-next-line\n            const geocoder = new google.maps.Geocoder();\n        if((destinationRef.current.value === '')&&(startRef.current.value === '')){\n           markers.setMap(null);\n           setMarkers({});\n        }\n        else if(startRef.current.value === '') {\n            // eslint-disable-next-line\n            const marker = new google.maps.Marker({ map: map });\n            const placeId = directionsResponse.geocoded_waypoints[1].place_id;\n            console.log(placeId);\n            geocoder\n            .geocode({ placeId: placeId})\n            .then(({ results }) => {\n                // Set the position of the marker using the place ID and location.\n                // @ts-ignore TODO This should be in @typings/googlemaps.\n                marker.setPlace({\n                  placeId: placeId,\n                  location: results[0].geometry.location,\n                });\n                setMarkers(marker);\n            });\n            setDirectionsResponse(null);\n        } else if(destinationRef.current.value === '') {\n            // eslint-disable-next-line\n            const marker = new google.maps.Marker({ map: map });\n            console.log(\"remove destination marker\");\n            const placeId = directionsResponse.geocoded_waypoints[0].place_id;\n            console.log(placeId)\n            geocoder\n            .geocode({ placeId: placeId})\n            .then(({ results }) => {\n                // Set the position of the marker using the place ID and location.\n                // @ts-ignore TODO This should be in @typings/googlemaps.\n                marker.setPlace({\n                  placeId: placeId,\n                  location: results[0].geometry.location,\n                });\n                setMarkers(marker);\n            });\n            setDirectionsResponse(null);\n        } \n        document.getElementById('panel').innerHTML=\"\";\n    }\n\n    return  (<><div className=\"flex-container\">\n        <div className=\"box1\">\n            <h1>Journey Planner</h1>\n            <div className=\"journey-form\">\n                <Autocomplete options={{\n                    bounds: defaultBounds,\n                    componentRestrictions: { country: [\"IE\"] },\n                    fields: [\"place_id\", \"geometry\", \"name\"],\n                    strictBounds: true,\n                }}>\n                    <input type=\"search\" placeholder=\"Start Point\" className=\"box\" ref={startRef} onChange= {clearRoute}></input>\n                </Autocomplete>\n                <Autocomplete options={{\n                    bounds: defaultBounds,\n                    componentRestrictions: { country: [\"IE\"] },\n                    fields: [\"place_id\", \"geometry\", \"name\"],\n                    strictBounds: true,\n                }}>\n                    <input type=\"search\" placeholder=\"Destination\" className=\"box\" ref={destinationRef} onChange={clearRoute}></input>\n                </Autocomplete>\n                <label for=\"time\">Choose a time to start the journey: </label>\n                <select id=\"option\" onChange={() => {\n                    var option = document.getElementById(\"option\").value;\n                    if (option !== \"now\") {\n                        document.getElementById(\"time\").innerHTML = '<input type=\"date\" name=\"\" class=\"date\">' + '<input type=\"time\" name=\"\" class=\"time\">';\n                    } else {\n                        document.getElementById(\"time\").innerHTML = \"\";\n                    }\n                } }>\n                    <option value=\"now\">Leave Now</option>\n                    <option value=\"depart\">Depart At</option>\n                    <option value=\"arrive\">Arrive By</option>\n                    <option value=\"lastAvaliable\">Last Avaliable</option>\n                </select>\n\n                <div id=\"time\"></div>\n                <button type=\"submit\" className=\"btn\" onClick={caculateRoute}>Search</button>\n            </div>\n            <div id=\"panel\"></div>\n        </div>\n        <div className=\"box2\">\n            <div id=\"map\">\n                <GoogleMap\n                    mapContainerStyle={containerStyle}\n                    center={center}\n                    zoom={13}\n                    onLoad={map => setMap(map)}\n                    // options={{\n                    //     bounds: defaultBounds,\n                    //     componentRestrictions: { country: [\"IE\"] },\n                    //     fields: [\"place_id\", \"geometry\", \"name\"],\n                    //     strictBounds: true,\n                    // }}\n                >\n                    {/* Child components, such as markers, info windows, etc. */}\n                    {/* <Marker position={center} /> */}\n                    {directionsResponse && (<DirectionsRenderer directions={directionsResponse} panel={ document.getElementById('panel') } routeIndex={0}/>)}\n                </GoogleMap>\n            </div>\n        </div>\n\n    </div></>);}\nexport default JourneyPlanning;","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/MainNavigation.js",[],[],"/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/WeatherCard.js",["53"],[],"import ReactWeather, { useOpenWeather } from 'react-open-weather';\n\nconst customStyles = {\n\tfontFamily:  'Helvetica, sans-serif',\n\tgradientStart:  '#0181C2',\n\tgradientMid:  '#04A7F9',\n\tgradientEnd:  '#4BC4F7',\n\tlocationFontColor:  '#FFF',\n\ttodayTempFontColor:  '#FFF',\n\ttodayDateFontColor:  '#B5DEF4',\n\ttodayRangeFontColor:  '#B5DEF4',\n\ttodayDescFontColor:  '#B5DEF4',\n\ttodayInfoFontColor:  '#B5DEF4',\n\ttodayIconColor:  '#FFF',\n\n};\n\nfunction WeatherCard(props) {\n  const { data,isLoading, errorMessage } = useOpenWeather({\n    key: 'f775d12211646f76b3f266a5076c78a9',\n    lat: '53.344',\n    lon: '-6.2672',\n    lang: 'en',\n    unit: 'metric', // values are (metric, standard, imperial)\n  });\n  \n{return (\n    <ReactWeather\n      isLoading={isLoading}\n      errorMessage={errorMessage}\n      data={data}\n      lang=\"en\"\n      locationLabel=\"Dublin\"\n      unitsLabels={{ temperature: 'C', windSpeed: 'Km/h' }}\n      showForecast={props.boolean}\n      theme = {customStyles}\n    />);\n}\n}\nexport default WeatherCard;","/Users/songwendi/Desktop/COMP47360---Dublin-Bus/frontend/src/components/layout/LoginForm.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":68,"nodeType":"56","messageId":"57","endLine":1,"endColumn":74},{"ruleId":"58","severity":1,"message":"59","line":129,"column":112,"nodeType":"60","messageId":"61","endLine":129,"endColumn":113},{"ruleId":"62","severity":2,"message":"63","line":47,"column":39,"nodeType":"56","messageId":"64","endLine":47,"endColumn":45,"suppressions":"65"},{"ruleId":"62","severity":2,"message":"63","line":53,"column":25,"nodeType":"56","messageId":"64","endLine":53,"endColumn":31,"suppressions":"66"},{"ruleId":"62","severity":2,"message":"63","line":61,"column":34,"nodeType":"56","messageId":"64","endLine":61,"endColumn":40,"suppressions":"67"},{"ruleId":"62","severity":2,"message":"63","line":68,"column":32,"nodeType":"56","messageId":"64","endLine":68,"endColumn":38,"suppressions":"68"},{"ruleId":"62","severity":2,"message":"63","line":85,"column":32,"nodeType":"56","messageId":"64","endLine":85,"endColumn":38,"suppressions":"69"},{"ruleId":"70","severity":1,"message":"71","line":27,"column":1,"nodeType":"72","messageId":"73","endLine":38,"endColumn":2},"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-undef","'google' is not defined.","undef",["74"],["75"],["76"],["77"],["78"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"kind":"79","justification":"80"},{"kind":"79","justification":"80"},{"kind":"79","justification":"80"},{"kind":"79","justification":"80"},{"kind":"79","justification":"80"},"directive",""]